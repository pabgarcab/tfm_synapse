{
	"name": "Re-Load Fact",
	"properties": {
		"folder": {
			"name": "Gold Fact CETAs"
		},
		"content": {
			"query": "-- EXEC gold.FactSales\n-- ==============================================================================\n-- Procedimiento almacenado para cargar la tabla de hechos Sales en GoldenlessSTG\n-- ==============================================================================\n\n\nCREATE OR ALTER PROCEDURE gold.FactSales\nWITH ENCRYPTION AS \n\n--------------\n-- Sales  --\n---------------\n-- DROP EXTERNAL TABLE [fact].[Sales]\nIF EXISTS ( SELECT * FROM sys.external_tables WHERE object_id = OBJECT_ID('fact.Sales') )\n    DROP EXTERNAL TABLE fact.Sales \n\nCREATE  EXTERNAL TABLE GoldenlessDWH.[fact].[Sales]\nWITH\n(\n\tLOCATION = 'gold/Fact/Sales', \n\tDATA_SOURCE = datalake1pgc,\n\tFILE_FORMAT = ParquetFileFormat\n) AS \nSELECT * FROM (\nSELECT\n    -1 AS idSkSales,\n    -1 AS idSales,\n    -1 AS idArticles,\n    -1 AS idskArticles,\n    -1 AS idWarehouse,\n    -1 AS idskWarehouse,\n    -1 AS idClient,\n    -1 AS idskClient,\n    -1 AS idPostalCodes,\n    -1 AS idskPostalCodes,\n    -1 AS idCurrency,\n    -1 AS idskCurrency,\n    -1 AS idTariff,\n    -1 AS idskTariff,\n    -1 AS idOperationType,\n    -1 AS idskOperationType,\n    -1 AS idHours,\n    -1 AS idskHours,\n    -1 AS idDate,\n    -1 AS idskDate,\n    CAST('1990-01-01' AS datetime2) AS date,\n    CAST('1990-01-01' AS datetime2) dateOp,\n    'D' AS ticketNumber,\n    -1 AS quantity,\n    -1 AS unitPrice,\n    -1 AS unitCost,\n    -1 AS amtTotalEuros,\n    -1 AS amtNetEuros,\n    -1 AS amtTotalEurosDiscount,\n    -1 AS amtNetEurosDiscount,\n    -1 AS discountSale,\n    -1 AS amtTotalDiscount,\n    -1 AS amtNetDiscount,\n\t19900101 AS loadDate,\n\t19900101 AS deltaDate\n\t--HASHBYTES('SHA2_256',('-1' + '-1' +'-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '1990-01-01' + '1990-01-01' + 'D' \n    --+ '-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '-1' + '-1')) AS [$hash]\nUNION\n\nSELECT \n    s.idSkSales,\n    s.idSales,\n    s.idArticles,\n    COALESCE(a.idSkArticles, -1) AS idSkArticles,\n    s.idWarehouse,\n    COALESCE(w.idSkWarehouse, -1) AS idSkWarehouse,\n    s.idClient,\n    COALESCE(cl.idSkClient, -1) AS idSkClient, \n    s.idPostalCodes,\n    COALESCE(p.idSkPostalCodes, -1) AS idSkPostalCodes, \n    s.idCurrency,\n    COALESCE(cu.idSkCurrency, -1) AS idSkCurrency,\n    s.idTariff,\n    COALESCE(t.idSkTariff, -1) AS idSkTariff, \n    s.idOperationType,\n    COALESCE(o.idSkOperationType, -1) AS idSkOperationType,\n    s.idHours,\n    COALESCE(h.idSkHours, -1) AS idSkHours,\n    s.idDate,\n    COALESCE(d.idSkDate, -1) AS idSkDate,\n    s.date,\n    s.dateOp,\n    s.ticketNumber,\n    s.quantity,\n    s.unitPrice,\n    s.unitCost,\n    s.amtTotalEuros,\n    s.amtNetEuros,\n    s.amtTotalEurosDiscount,\n    s.amtNetEurosDiscount,\n    s.discountSale,\n    s.amtTotalDiscount,\n    s.amtNetDiscount,\n    s.loadDate,\n    s.deltaDate\nFROM [SilverlessSTG].[silver].[Sales] AS s\nLEFT JOIN [GoldenlessDWH].[dim].[Articles] AS a\n    ON s.idArticles = a.idArticles AND s.dateOp BETWEEN a.fromDate AND a.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[Client] AS cl\n    ON s.idClient = cl.idClient AND s.dateOp BETWEEN cl.fromDate AND cl.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[Currency] AS cu\n    ON s.idCurrency = cu.idCurrency AND s.dateOp BETWEEN cu.fromDate AND cu.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[Date] AS d\n    ON s.idDate = d.idDate AND s.dateOp BETWEEN d.fromDate AND d.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[Hours] AS h\n    ON s.idHours = h.idHours AND s.dateOp BETWEEN h.fromDate AND h.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[OperationType] AS o\n    ON s.idOperationType = o.idOperationType AND s.dateOp BETWEEN o.fromDate AND o.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[PostalCodes] AS p\n    ON s.idPostalCodes = p.idPostalCode AND s.dateOp BETWEEN p.fromDate AND p.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[Tariff] AS t\n    ON s.idTariff = t.idTariff AND s.dateOp BETWEEN t.fromDate AND t.toDate\nLEFT JOIN [GoldenlessDWH].[dim].[Warehouse] AS w\n    ON s.idWarehouse = w.idWarehouse AND s.dateOp BETWEEN w.fromDate AND w.toDate\n\n\n\n\n\n) a ORDER BY idSkSales",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "GoldenlessDWH",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}